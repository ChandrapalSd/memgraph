#>cpp
#pragma once

#include <cstring>
#include <vector>

#include "communication/rpc/messages.hpp"
#include "raft/log_entry.hpp"
#include "raft/raft_rpc_messages.capnp.h"
#include "raft/snapshot_metadata.hpp"
cpp<#

(lcp:namespace raft)

(lcp:capnp-namespace "raft")

(lcp:capnp-import 'log "/raft/log_entry.capnp")
(lcp:capnp-import 'snap "/raft/snapshot_metadata.capnp")

(lcp:define-rpc request-vote
  (:request
    ((candidate-id :uint16_t)
     (term :uint64_t)
     (last-log-index :uint64_t)
     (last-log-term :uint64_t)))
  (:response
    ((vote-granted :bool)
     (term :uint64_t))))

(lcp:define-rpc append-entries
  (:request
    ((leader-id :uint16_t)
     (leader-commit :uint64_t)
     (term :uint64_t)
     (prev-log-index :uint64_t)
     (prev-log-term :uint64_t)
     (entries "std::vector<raft::LogEntry>" :capnp-type "List(Log.LogEntry)")))
  (:response
    ((success :bool)
     (term :uint64_t))))

(lcp:define-rpc heartbeat
  (:request
    ((leader-id :uint16_t)
     (term :uint64_t)))
  (:response
    ((success :bool)
     (term :uint64_t))))

(lcp:define-rpc install-snapshot
  (:request
    ((leader-id :uint16_t)
     (term :uint64_t)
     (snapshot-metadata "raft::SnapshotMetadata" :capnp-type "Snap.SnapshotMetadata")
     (data "std::string")))
  (:response
    ((term :uint64_t))))

(lcp:pop-namespace) ;; raft
