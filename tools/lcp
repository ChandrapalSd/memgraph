#!/bin/bash -e

if [[ $# -ne 1 && $# -ne 2 ]]; then
  echo "Usage: $0 LCP_FILE [--capnp-declaration | CAPNP_ID]"
  echo "Convert a LCP_FILE to C++ header file and output to stdout."
  echo "If CAPNP_ID is provided, then the Cap'n Proto schema is generated."
  echo "Passing --capnp-declaration flag will declare serialization functions in "
  echo "C++ header without actually generating the Cap'n Proto schema or code."
  exit 1
fi

if [[ ! -r "$1" ]]; then
  echo "File '$1' doesn't exist or isn't readable"
  exit 1
fi

lcp_file=`realpath $1`
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

quicklisp_install_dir="$HOME/quicklisp"
if [[ -v QUICKLISP_HOME ]]; then
  quicklisp_install_dir="${QUICKLISP_HOME}"
fi

capnp=""
if [[ $# -eq 2 ]]; then
  if [[ "$2" == "--capnp-declaration" ]]; then
    capnp=":capnp-declaration t"
  else
    capnp=":capnp-id \"$2\""
  fi
fi

echo \
"
(load \"${quicklisp_install_dir}/setup.lisp\")
(ql:quickload :cl-ppcre :silent t)
(load \"$script_dir/../src/lisp/lcp.lisp\")
(lcp:process-file \"$lcp_file\" $capnp)
" | sbcl --script

filename=`basename $lcp_file .lcp`
hpp_file="$(dirname $lcp_file)/$filename.hpp"
clang-format -style=file -i $hpp_file

if [[ $# -eq 2 && -w  "$lcp_file.cpp" ]]; then
  clang-format -style=file -i "$lcp_file.cpp"
fi
